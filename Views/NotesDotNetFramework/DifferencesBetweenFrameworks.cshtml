<div class="main-container">
    <section class="showBullets">
        <div class="container">
            <div class="row">
                <div class="col-sm-10 col-md-8">

                    <h1>@ViewData["Title"]</h1>

                    <div class="container">
                        <div class="row">

                        </div>
                        <br />

                        <div class="row">
                            <h3>There are four major components of .NET architecture:</h3>
                            <div class="container">
                                <ul>
                                    <li>Common language specification (CLS) defines how objects are implemented so they work everywhere .NET works. CLS is a subset of Common Type System (CTS) — which sets a common way to describe all types.</li>
                                    <li>Framework class library (FCL) is a standard library that collects reusable classes, interfaces, and value types.</li>
                                    <li>Common language runtime (CLR) is the virtual machine that runs the framework and manages the execution of .NET programs.</li>
                                    <li>Tools such as Visual Studio to create standalone applications, interactive websites, web applications and web services.</li>
                                </ul>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <h3>.NET Core vs .NET Framework</h3>
                            <div class="container">
                                Microsoft maintains both runtimes for building applications with .NET, and they share many of the same APIs. This shared API is what is called the .NETStandard.
                            </div>
                            <br />
                            <img src="~/images/DifferencesBetweenFrameworks.png" alt="Differences between .NET frameworks" />
                        </div>
                        <br />

                        <div class="row">
                            <h3>Developers Should Use .NET Core When…</h3>
                            <div class="container">
                                A cross-platform and open-source framework, it can be used to develop applications on any platform. Often it is used for cloud applications or refactoring large enterprise applications into microservices.
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <h3>.NET Framework version history</h3>
                            <div class="container">
                                <h4>About</h4>
                                <ul>
                                    <li>Source: <a href="https://en.wikipedia.org/wiki/.NET_Framework_version_history">https://en.wikipedia.org/wiki/.NET_Framework_version_history</a></li>
                                    <li>Microsoft started development on the .NET Framework in the late 1990s originally under the name of Next Generation Windows Services (NGWS).</li>
                                    <li>New versions of .NET Framework replace older versions when the CLR version is the same.</li>
                                    <li>The .NET Framework family also includes two versions for mobile or embedded device use.</li>
                                    <li>A reduced version of the framework, the .NET Compact Framework, is available on Windows CE platforms, including Windows Mobile devices such as smartphones.</li>
                                    <li>The .NET Micro Framework is targeted at severely resource-constrained devices.</li>
                                </ul>
                                <h4>.NET Framework 1.0</h4>
                                <ul>
                                    <li>The first version of .NET Framework was released on 13 February 2002.</li>
                                </ul>
                                <h4>.NET Framework 1.1</h4>
                                <ul>
                                    <li>Built-in support for mobile ASP.NET controls, which was previously available as an add-on</li>
                                    <li>Built-in support for ODBC and Oracle Database, which was previously available as an add-on</li>
                                    <li>.NET Compact Framework, a version of the .NET Framework for small devices</li>
                                    <li>Internet Protocol version 6 (IPv6) support</li>
                                </ul>
                                <h4>.NET Framework 2.0</h4>
                                <ul>
                                    <li>Released on 22 January 2006</li>
                                    <li>Upgraded Common Language Runtime (CLR)</li>
                                    <li>Full 64-bit computing support for both the x64 and the IA-64 hardware platforms</li>
                                    <li>Microsoft SQL Server integration: Instead of using T-SQL, one can build stored procedures and triggers in any of the .NET-compatible languages</li>
                                    <li>New personalization features for ASP.NET, such as support for themes, skins, master pages and webparts</li>
                                    <li>.NET Micro Framework, a version of the .NET Framework related to the Smart Personal Objects Technology initiative</li>
                                    <li>Partial classes</li>
                                    <li>Nullable types</li>
                                    <li>Anonymous methods</li>
                                    <li>Iterators</li>
                                    <li>Data tables</li>
                                    <li>Common Language Runtime (CLR) 2.0</li>
                                    <li>Language support for generics built directly into the .NET CLR</li>
                                </ul>
                                <h4>.NET Framework 3.0</h4>
                                <ul>
                                    <li>Formerly called WinFX</li>
                                    <li>Released on 21 November 2006</li>
                                    <li>There are no major architectural changes included with this release; .NET Framework 3.0 uses the same CLR as .NET Framework 2.0.</li>
                                    <li>
                                        Consists of four major new components:
                                        <ul>
                                            <li>Windows Presentation Foundation (WPF), formerly code-named Avalon: A new user interface subsystem and API based on XAML markup language, which uses 3D computer graphics hardware and Direct3D technologies</li>
                                            <li>Windows Communication Foundation (WCF), formerly code-named Indigo: A service-oriented messaging system which allows programs to interoperate locally or remotely similar to web services</li>
                                            <li>Windows Workflow Foundation (WF): Allows building task automation and integrated transactions using workflows</li>
                                            <li>Windows CardSpace, formerly code-named InfoCard: A software component which securely stores a person's digital identities and provides a unified interface for choosing the identity for a particular transaction, such as logging into a website</li>
                                        </ul>
                                    </li>
                                </ul>
                                <h4>.NET Framework 3.5</h4>
                                <ul>
                                    <li>Released on 19 November 2007</li>
                                    <li>Uses Common Language Runtime (CLR) 2.0</li>
                                    <li>.NET Framework 3.5 also installs .NET Framework 2.0 SP1 and 3.0 SP1 (with the later 3.5 SP1 instead installing 2.0 SP2 and 3.0 SP2), which adds some methods and properties to the BCL classes in version 2.0 which are required for version 3.5 features such as Language Integrated Query (LINQ). These changes do not affect applications written for version 2.0, however.</li>
                                    <li>As with previous versions, a new .NET Compact Framework 3.5 was released in tandem with this update in order to provide support for additional features on Windows Mobile and Windows Embedded CE devices.</li>
                                    <li>
                                        Service Pack 1
                                        <ul>
                                            <li>The .NET Framework 3.5 Service Pack 1 was released on 11 August 2008.</li>
                                            <li>This release adds new functionality and provides performance improvements under certain conditions, especially with WPF where 20–45% improvements are expected.</li>
                                            <li>Two new data service components have been added, the ADO.NET Entity Framework and ADO.NET Data Services.</li>
                                            <li>Two new assemblies for web development, System.Web.Abstraction and System.Web.Routing, have been added; these are used in the ASP.NET MVC framework and, reportedly, will be used in the future release of ASP.NET Forms applications.</li>
                                        </ul>
                                    </li>
                                    <li>
                                        .NET Framework 3.5 SP1 Client Profile
                                        <ul>
                                            <li>
                                                For the .NET Framework 3.5 SP1 there is also a new variant of the .NET Framework, called the ".NET Framework Client Profile", which at 28 MB is significantly smaller than the full framework and only installs components that are the most relevant to desktop applications. However, the Client Profile amounts to this size only if using the online installer on Windows XP SP2 when no other .NET Frameworks are installed or using Windows Update. When using the off-line installer or any other OS, the download size is still 250 MB.
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                                <h4>.NET Framework 4.0</h4>
                                <ul>
                                    <li>On 12 April 2010, the final version of .NET Framework 4.0 was launched alongside the final release of Microsoft Visual Studio 2010.</li>
                                    <li>On 18 April 2011, version 4.0.1 was released supporting some customer-demanded fixes for Windows Workflow Foundation.</li>
                                    <li>On 19 October 2011, version 4.0.2 was released supporting some new features of Microsoft SQL Server.</li>
                                    <li>On 4 March 2012, version 4.0.3 was released.</li>
                                    <li>Introduced Common Language Runtime (CLR) 4.0</li>
                                    <li>Parallel Extensions to improve support for parallel computing, which target multi-core or distributed systems. To this end, technologies like PLINQ (Parallel LINQ), a parallel implementation of the LINQ engine, and Task Parallel Library, which exposes parallel constructs via method calls, are included.</li>
                                    <li>New Visual Basic .NET and C# language features, such as implicit line continuations, dynamic dispatch, named parameters, and optional parameters</li>
                                    <li>Support for Code Contracts</li>
                                    <li>Inclusion of new types to work with arbitrary-precision arithmetic (System.Numerics.BigInteger) and complex numbers (System.Numerics.Complex)</li>
                                </ul>
                                <h4>.NET Framework 4.5</h4>
                                <ul>
                                    <li>Released on 15 August 2012</li>
                                    <li>Contains additional runtime features</li>
                                    <li>
                                        Core Features
                                        <ul>
                                            <li>Ability to limit how long the regular expression engine will attempt to resolve a regular expression before it times out.</li>
                                            <li>Better performance when retrieving resources.</li>
                                            <li>Native support for Zip compression (previous versions supported the compression algorithm, but not the archive format).</li>
                                            <li>New asynchronous features were added to the C# and Visual Basic languages. These features add a task-based model for performing asynchronous operations, implementing futures and promises.</li>
                                        </ul>
                                    </li>
                                    <li>The Managed Extensibility Framework or MEF is a library for creating lightweight, extensible applications. It allows application developers to discover and use extensions with no configuration required. It also lets extension developers easily encapsulate code and avoid fragile hard dependencies. MEF not only allows extensions to be reused within applications, but across applications as well.</li>
                                    <li>
                                        ASP.NET
                                        <ul>
                                            <li>Support for new HTML5 form types.</li>
                                            <li>Support for model binders in Web Forms. These let you bind data controls directly to data-access methods, and automatically convert user input to and from .NET Framework data types.</li>
                                            <li>Support for unobtrusive JavaScript in client-side validation scripts.</li>
                                            <li>Improved handling of client script through bundling and minification for improved page performance.</li>
                                            <li>Integrated encoding routines from the Anti-XSS library (previously an external library) to protect from cross-site scripting attacks.</li>
                                            <li>Support for WebSocket protocol.</li>
                                            <li>Support for reading and writing HTTP requests and responses asynchronously.</li>
                                            <li>Support for asynchronous modules and handlers.</li>
                                            <li>Support for content distribution network (CDN) fallback in the ScriptManager control.</li>
                                        </ul>
                                    </li>
                                    <li>Provides a new programming interface for HTTP applications: System.Net.Http namespace and System.Net.Http.Headers namespaces are added</li>
                                    <li>Debugger support for seeing managed return values</li>
                                    <li>Async-aware debugging in the Call Stack and Tasks windows</li>
                                    <li>Debugger support for analyzing .NET memory dumps (in the Visual Studio Ultimate SKU)</li>
                                    <li>Tools for .NET developers in the Performance and Diagnostics hub</li>
                                </ul>
                                <h4>.NET Framework 4.6</h4>
                                <ul>
                                    <li>The cryptographic API in .NET Framework 4.6 uses the latest version of Windows CNG cryptography API.</li>
                                    <li>WPF improvements for spell check, support for per-user custom dictionaries and improved touch performance.</li>
                                    <li>Enhanced support for Elliptic Curve Digital Signature Algorithm (ECDSA) X509 certificates.</li>
                                    <li>Added support in SQL Connectivity for AlwaysOn, Always Encrypted and improved connection open resiliency when connecting to Azure SQL Database.</li>
                                    <li>Azure SQL Database now supports distributed transactions using the updated System.Transactions APIs.</li>
                                    <li>Many other performance, stability, and reliability related fixes in RyuJIT, GC, WPF and WCF.</li>
                                    <li>Support for localization of data annotations in ASP.NET</li>
                                    <li>Soft keyboard and per-monitor DPI support for WPF</li>
                                </ul>
                                <h4>.NET Framework 4.7</h4>
                                <ul>
                                    <li>Enhanced cryptography with elliptic curve cryptography</li>
                                    <li>More support for touch and stylus in Windows Presentation Foundation (WPF)</li>
                                    <li>New print APIs for WPF</li>
                                </ul>
                                <h4>.NET Framework 4.8</h4>
                                <ul>
                                    <li>Released on 18 April 2019</li>
                                    <li>This is the final version of .NET Framework, future work going into the rewritten and cross-platform .NET Core platform, which shipped as .NET 5 in November 2020.</li>
                                    <li>High DPI enhancements for WPF applications</li>
                                    <li>Accessibility improvements</li>
                                    <li>Performance updates</li>
                                    <li>Security enhancements</li>
                                </ul>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>

        </div>
    </section>
</div>